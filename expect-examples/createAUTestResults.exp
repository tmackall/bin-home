#!/usr/bin/expect
#
# This script create the latest AU test results
#
#log_user 0
package require textutil::split
source ~/bin/aLib.exp
set timeout 3

#
# create a shell
spawn bash
puts "\n\n\n"
#
# set the prompt
set lPrompt "uniQuePrompt#"
set lCommand "export PS1=$lPrompt\n"
if {[sendSimple $lCommand $lPrompt 5]} {exit}

set mainlineBranch "donut"


#
# get the currect time for reference
set currTime [clock seconds]
set currDate [clock format $currTime] 

set location "\/var\/www\/reports\/AU-reports\/"
append dash $location "AU-dash.xml"
puts "dash $dash\n"
set f1 [open $dash r]
set data [read $f1]
close $f1
set header [list]
set body [list]
set data [split $data "\n"]
set line ""
set fBody 0
foreach line $data {
	if {![regexp {\<REPORTS\>} $line]} {
		if { $fBody } {
			lappend body $line
		} else {
			lappend header $line
		}
	} else {
		lappend header "<REPORTS>"
		set fBody 1
	}
}
puts "header: $header\n"
set lTags [list]
set pointer 0
set size [llength $body]
set lEntries [list]
#
# parse the XML
# put the entry (list) inside a list of entries
for {set j 0} {$j < [llength $body]} {incr j} { 
	set line [lindex $body $j]
	#puts "line $line\n"
	if { [regexp {<entry>} $line]} {
		incr j
		set lEntry [list]
		while {! [regexp {<\/entry>} [lindex $body $j]]} {
			set entry [lindex $body $j]
			#puts "entry $entry\n"
			lappend lEntry $entry
			incr j
		}
		lappend lEntries $lEntry
	}
}
#
# pull out all the branches that have reports
set testedBranches [list]
foreach entry $lEntries {
	if {[regexp {<BRANCH>(.*)<\/BRANCH>} $entry a branch] && \
		[regexp {<AU_REV>(.*\d\d\d)\<\/AU_REV>} $entry a au]} {
		if { -1 == [lsearch -exact $testedBranches $branch] } {
			lappend testedBranches $branch
		}
	}
}
#
# PATH to where apache/wiki looks for reports
set pathToReports " \/var\/www\/reports\/AU-reports\/"
#
# create the branch table
set brHeader [list]
lappend brHeader "<?xml version=\"1.0\"?>"
lappend brHeader "<?xml-stylesheet type=\"text/xsl\" href=\"Branch-Table.xsl\"?>"
lappend brHeader "<REPORTS>"
set fileName "/tmp/Branch-Table.xml"
set f [open $fileName w]
foreach line $brHeader {
	puts $f $line
}
foreach branch $testedBranches {
	puts $f "<entry>"
	puts $f "<BRANCH>$branch<\/BRANCH>"	
	puts $f "<\/entry>"
}
puts $f "<\/REPORTS>"
close $f
#
# copy the new xml file from tmp to the apache dir that is expected
set lCommand "cp -f $fileName $pathToReports\n"
sendSimple $lCommand $lPrompt 15

#
# create report files for all the branches that have reports
foreach branch $testedBranches {
	puts "************ $branch ***********"
	#
	# setup log files
	set fileName "/tmp/$branch.xml"
	set f [open $fileName w]
	foreach line $header {
		puts $f $line
	}
	foreach entry $lEntries {
		if {[regexp "<BRANCH>$branch<\/BRANCH>" $entry] } {
			if {[regexp {<AU_REV>.*\d\d\d<\/AU_REV>} $entry] } {
				puts $f  "<entry>"
				foreach line $entry {
					puts $f $line
				}
				puts $f  "<\/entry>"
			}
		}
	}
	puts $f "<\/REPORTS>"
	close $f
	#
	# copy the new xml file from tmp to the apache dir that is expected
	set lCommand "cp -f $fileName $pathToReports\n"
	sendSimple $lCommand $lPrompt 15
}
#
# mail results to me
set lCommand "mail tmackall@qualcomm.com  -s \
	\"Latest AU test results have been updated\" \
	< $fileName\n"
sendSimple $lCommand $lPrompt 15
