#!/usr/bin/expect
#
# Script for making an Android build
#
source ~/bin/aLib.exp
set timeout 3

set lPrompt "uniQuePrompt#"

#
# procedure to handle errors - send error email
proc handleFail {error inPrompt} {

#	set lCommand "mail tmackall -s \"Nightly Failed - $error error\\!\" < /tmp/0\n"
	set lCommand "mail tmackall -s \"Nightly Failed - error\\!\" < /tmp/0\n"
	sendSimple $lCommand $inPrompt 15
	exit
}



#
# verify that there is at least one command line arg
# tag format refs/tags/au-01.08.00.005
if !$argc {
	puts "\n\nUsage: aBuild.exp <dir name> <branch/tag>\n"
	exit
}
set lDir [lindex $argv 0] 
if {$argc > 1 } {
	set lBranch [lindex $argv 1]
} else {
	set lBranch "donut"
}
	
puts $lBranch
set lStart [clock seconds]

#
# create a shell
spawn bash

#
# set the prompt
set lCommand "export PS1=$lPrompt\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}
	
set lCommand "touch /tmp/0\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}
#
# env var needed to know the root dir for the build
if {$env(TESTHM) == ""} {
	puts "TESTHM env var must be defined!\n"
	exit
}
#
# cd to the workspace home dir
set lCommand "cd $env(TESTHM)\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}

#
# delete the dir if it exist
set lCommand "rm -rf  $lDir\n"
if {[sendSimple $lCommand $lPrompt 160]} {
	if {[sendSimple $lCommand $lPrompt 160]} {
		if {[sendSimple $lCommand $lPrompt 160]} {
			handleFail $lCommand $lPrompt
		}
	}
}

#
# make the new directory
set lCommand "mkdir $lDir\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}

#
# cd to the new dir
set lCommand "cd $lDir\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}

set timeout [expr 20*60]
expect -re .* {}

#
# setup the repo environment
exp_send "repo init -u git://git-android.quicinc.com/platform/manifest.git -b $lBranch\n"

expect {
	-re \r\n$lPrompt {
		puts "received lPrompt $lPrompt\n"
	}
	-re "\r\nYour Email +.*: " { 
		exp_send "\n" 
		exp_continue
	}
	-re "\r\nYour Name +.*: " { 
		exp_send "\n" 
		exp_continue
	}
    -re "is this correct \[yes\/no\]\?" {
		exp_send "yes\n" 
		exp_continue
	}
	timeout {puts "repo init failed\n"; {handleFail "repo init"} }
}
#
# pull the files from the repo
set lCommand "~/bin/repo sync\n"
if {[sendSimple $lCommand $lPrompt [expr 60*60]]} {handleFail $lCommand $lPrompt}

#
# expose some shell function
set lCommand "source build/envsetup.sh\n"
if {[sendSimple $lCommand $lPrompt [expr 15]]} {handleFail $lCommand $lPrompt}
#
# setup the build environment
set lCommand "choosecombo 1 1 msm7627_surf eng\n"
if {[sendSimple $lCommand $lPrompt [expr 30]]} {
	if {[sendSimple $lCommand $lPrompt [expr 30]]} {
		if {[sendSimple $lCommand $lPrompt [expr 30]]} {handleFail $lCommand $lPrompt}
	}
}

#
# build Android
set lCommand "make -j4\n"
if {[sendSimple $lCommand $lPrompt [expr 60*60]]} {handleFail "make" $lPrompt}

#
# 
set lCommand "cp -f ./out/target/product/msm7201a_surf/usbloader ./out/target/product/msm7201a_surf/appsboot.mbn \n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}


# 
set lCommand "./out/host/linux-x86/bin/mkheader out/target/product/msm7201a_surf/usbloader ./out/target/product/msm7201a_surf/appsboothd.mbn\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}


# 
set lCommand "chmod 644 ./out/target/product/msm7201a_surf/system.img\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}

# 
set lCommand "chmod 644 ./out/target/product/msm7201a_surf/userdata.img\n"
if {[sendSimple $lCommand $lPrompt 5]} {handleFail $lCommand $lPrompt}

#
# calculate the amount of time this took
set lStop [clock seconds]
set nTime [expr $lStop - $lStart]
set nTime [expr $nTime/60.0]
append nTime " minutes"
puts $nTime
#
# output build time to file
set lCommand "echo `date` >> $env(TESTHM)/buildTimes.txt\n"
sendSimple $lCommand $lPrompt 5

set lCommand "echo $nTime >> $env(TESTHM)/buildTimes.txt\n"
sendSimple $lCommand $lPrompt 5

set lCommand "mail tmackall -s \"Nightly build was successful\\!\" < /tmp/0\n"
sendSimple $lCommand $lPrompt 15

exp_close 

