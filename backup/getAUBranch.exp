#!/usr/bin/expect
#
# This script generates an email with the changes, commits, and CR #'s between 2 tags
#
source ~/bin/aLib.exp
set timeout 3

if {[info exists env(REL_USER)]} {
	set relUser $env(REL_USER)
} else {
	set relUser "tmackall"
}
set workspace "/local/mnt/workspace/tmackall/froyo"
#
# Process the input parameters
if {  [llength $argv] == 4 } {
	set outDir [lindex $argv 3]
	set workspace [lindex $argv 2]
	set toTag [lindex $argv 1] 
	set fromTag [lindex $argv 0] 
	puts "old release: $fromTag\n"
}
#	puts "\n\nUsage: makeRelease.exp au-01.08.00.XXX au-01.08.00.YYY /local/mnt/workspace/release /tmp"
#	puts "Usage: makeRelease.exp  <from tag> <to tag> <workspace head dir> <outfile dir>\n"
#	exit 1
#
# create a shell
log_user 0
spawn bash

#
# set the prompt
set lPrompt "uniQuePrompt#"
set lCommand "export PS1=$lPrompt\n"
if {[sendSimple $lCommand $lPrompt 5]} {
	puts "Failed: set prompt\n"
	exit 1
}


set timeout [expr 120]
expect -re .* {}

set lChanges ""

#
# cd to workspace head
set lCommand "cd $workspace\/bionic\n"
if { [sendSimple $lCommand $lPrompt 5] } {
	puts "Failed: $lCommand\n"
	exit 2
}


#
# clear the expect out buffer
expect -re .* {}

#
set lCommand "git tag -l au-01.08.01\*\n"
set lChanges [sendAndReturnOutput $lCommand $lPrompt 30]
set aus1 [split $lChanges "\r\n"]
set lCommand "git tag -l  AU_LINUX_ANDROID_\*\n"
set lChanges [sendAndReturnOutput $lCommand $lPrompt 30]
set aus2 [split $lChanges "\r\n"]
set aus [concat $aus2 $aus1]
set lAuBranch [list]
foreach au $aus {
	set lCommand "git show $au\n"
	set lChanges [sendAndReturnOutput $lCommand $lPrompt 5]
	if { [regexp {AU_LINUX_ANDROID\.01\.08\.01.\d+ based on (\S+)} $lChanges a branch] || \
		 [regexp {AU_LINUX_ANDROID_.*\.02\.0\d\.\d\d\.\d\d\.\d+ based on (\S+)} \
            $lChanges a branch]} {
		if {![regexp {Date:([^(\r\n)]*)} $lChanges a date] } {
puts "xxxxx"
			set date ""
		}
		regsub {quic/korg/} $branch "" branch
   		lappend lAuBranch "$au $branch\t$date"
	}
	
}
set lAuBranch [lsort $lAuBranch]
set lFile "/tmp/auBranchMap.html"
set f [open $lFile w]
puts $f "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\""
puts $f "\"http://www.w3.org/TR/html4/strict.dtd\">"
puts $f "<HTML>"
puts $f "<HEAD>"
puts $f "<TITLE></TITLE>"
puts $f "<META NAME=\"generator\" CONTENT=\"HTML::TextToHTML v2.46\">"
puts $f "</HEAD>"
puts $f "<BODY>"
set currTime [clock seconds]
puts $f "<FONT COLOR=\"#ff0000\"><P>******* Updated [clock format $currTime]  *******</FONT><BR><BR>"
puts $f "<FONT COLOR=\"#000fff\"><P><PRE>\tAU\t\tBranch\t\tDate</PRE></P></FONT>"
foreach value $lAuBranch {
	regsub " " $value "\t\t" value
	puts $f "<PRE>$value </PRE>"
}
puts $f "</BODY>"
puts $f "</HTML>"
close $f
set lCommand "cp $lFile /var/www/reports/auBranchMap/\n"
sendSimple $lCommand $lPrompt 5
