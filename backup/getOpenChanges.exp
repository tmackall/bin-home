#!/usr/bin/expect
#
# Script for getting a list of 
#
source ~/bin/aLib.exp
set timeout 3
set tomorrow9 1241189870

#
# if I want to send email to all the offenders
set input [lindex $argv 0] 
set fMail 0
if {$input == "s" } {
	puts "send spam\n"
        set fMail 1
} 
#
# create a shell
spawn bash

#
# set the prompt
set lPrompt "uniQuePrompt#"
set lCommand "export PS1=$lPrompt\n"
if {[sendSimple $lCommand $lPrompt 5]} {exit 1}

set timeout [expr 60]
expect -re .* {}

set lChanges ""
match_max 2000000
#
# setup the repo environment
exp_send "psql  -h gitquic01 -U gerrit2_ro -c \'select ac.preferred_email,changes.change_id,changes.open from changes,accounts as ac WHERE changes.owner_account_id=ac.account_id\' reviewdb\n"

expect {
	-re ".*\r\nPassword for user gerrit2_ro:" {
		exp_send "letmeout\n"
		exp_continue
	}
	-re "(.*)\r\n$lPrompt" {
		puts "made it2\n"
		set lChanges $expect_out(1,string)
	}
	timeout {puts "Get Verified Changes Failed\n"; exit }
}

set records [split $lChanges "\r\n"]
set lsItems {}
array unset lsSubmitItems
set lsNotSubmitItems {}

#
# Iterate over the records
foreach rec $records {
	regsub -all {[ \r\t\n]+} $rec "" rec
	regsub -all {refs/heads/} $rec "" rec
	puts "rec: $rec"
	set fields [split $rec "|"]
	set  id  [lindex $fields 1]
	set  user  [lindex $fields 0]
	puts "id: \"$id\""
	if { [regexp {^[[:digit:]]+$} $id] > 0} {
		if { [regexp "Y" [lindex $fields 2]] } { 
			if {![regexp {lnxbuild@} $user]} {
				lappend lsItems [list  $id $user]
			}
		}
	}
}

#
# create script to unverify
set outfile [open "/tmp/openChanges.out" w]
puts $outfile "Number of items needing attention: [llength $lsItems]\n"
puts $outfile "Change#\tSubmitter"
set lsItems [lsort $lsItems]
foreach line $lsItems {
	puts $outfile "$line\t"
}
close $outfile
puts [clock format [clock seconds]]
set lCommand "mail tmackall -s \"Changes Open\" < /tmp/openChanges.out\n"
if {[sendSimple $lCommand $lPrompt 15]} {exit}
set i 1
set j [list tmackall@quicinc.com]

set secsToDeletion [expr $tomorrow9 - [clock seconds]]
#
# code to spam all
if { $fMail } {
	set spam [open "/tmp/spam.out" w]
	puts $spam "All,\n\nThis change(s) is considered open in Gerrit. This is a friendly reminder to move this change along. If this changes is no longer needed, please abandon the change. If the change is needed, then please work to get the change approved and verified. \n\nThanks,\n-tom"
	close $spam
	foreach line $lsItems {
		set fields [split $line " "]
		set lCommand "mail [lindex $fields 1]  -s \
			\"Gerrit change\# [lindex $fields 0] is open\" \
			< /tmp/spam.out\n"
		#if {[sendSimple $lCommand $lPrompt 15]} {exit}
		puts "lc: $lCommand\n"
	}
}
exp_close 

