#!/usr/bin/expect
#
# This script approves a Gerrit change.
#
#log_user 0
source ~/bin/aLib.exp
set timeout 3

#
# create a shell
spawn bash
puts "\n\n\n"
#
# set the prompt
set lPrompt "uniQuePrompt#"
set lCommand "export PS1=$lPrompt\n"
if {[sendSimple $lCommand $lPrompt 5]} {exit}


set isTest 0

#
# Handle the user input
if { [llength $argv] == 1 } {
    set fileToParse [lindex $argv 0] 
	if { ![file exist $fileToParse]} {
		puts "File does not exist: $fileToParse"
		exit 1
	}
	if { [set fid [open $fileToParse  r]] <= 0} {
		puts "Failed to open $fileToParse"
		exit 1
	}
	set file_data [read $fid]
	close $fid
	set data [split $file_data "\n"] 
} elseif { [llength $argv] == 2 } {
	if { [lindex $argv 0] == "-t"} { 
		set isTest 1
    	set fileToParse [lindex $argv 1] 
		if { ![file exist $fileToParse]} {
			puts "File does not exist: $fileToParse"
			exit 1
		}
		if { [set fid [open $fileToParse  r]] <= 0} {
			puts "Failed to open $fileToParse"
			exit 1
		}
		set file_data [read $fid]
		close $fid
		set data [split $file_data "\n"] 
	} elseif { [lindex $argv 1] == "-t"} {
		set isTest 1
    	set fileToParse [lindex $argv 0] 
		if { ![file exist $fileToParse]} {
			puts "File does not exist: $fileToParse"
			exit 1
		}
		if { [set fid [open $fileToParse  r]] <= 0} {
			puts "Failed to open $fileToParse"
			exit 1
		}
		set file_data [read $fid]
		close $fid
		set data [split $file_data "\n"] 
	} else {
		puts "\n\nUsage: approveChanges.exp  input.txt"
		puts "Usage: approveChanges.exp  <input file>\n"
		exit
	}
} else {
	puts "\n\nUsage: approveChanges.exp  input.txt"
	puts "Usage: approveChanges.exp  <input file>\n"
	exit
}

#
# get each line of the email and process it
foreach changeId $data {
	# pull the change ID from the git-pull line
	if {[regexp {git pull.*\/(\d+)\/(\d+)$} $changeId  a changeId patchSet]} {
		puts $a
		puts "Change: $changeId"
		puts "Patchset: $patchSet"

		#
		# get the numeric owner of the change from the changes table
		set lChanges [list]
		set lCommand "ssh -p 29418 review-android.quicinc.com gerrit approve --code-review=2 --message=\\\'Cross-project dependency approval\\\' $changeId,$patchSet\n"
sendSimple $lCommand $lPrompt 15

	}
}
